<?php/* * Copyright 2017 osclass-pro.com and osclass-pro.ru * * You shall not distribute this theme and any its files (except third-party libraries) to third parties. * Rental, leasing, sale and any other form of distribution are not allowed and are strictly forbidden. */    define('BELLO_THEME_VERSION', '1.2.6');    function bello_region_select($class='') {        View::newInstance()->_exportVariableToView('list_regions', Search::newInstance()->listRegions('%%%%', '>=', 'region_name ASC') ) ;            echo '<select id="sRegion" name="sRegion" class="'.$class.'">' ;			echo '<option value="">'.__('Select a region', 'bello').'</option>' ;            while( osc_has_list_regions() ) {                echo '<option value="' . osc_list_region_name() . '">' . osc_list_region_name() . '</option>' ;            }            echo '</select>' ;        View::newInstance()->_erase('list_regions') ;    }	function bello_region_select_items($class='') {            echo '<select id="sRegion" name="sRegion" class="'.$class.'">' ;            echo '<option value="">'.__('Select a region', 'bello').'</option>' ;            while( osc_has_list_regions() ) {                echo '<option value="' . osc_list_region_name() . '">' . osc_list_region_name() . '</option>' ;            }            echo '</select>' ;    }	function bello_city_select($class='') {        View::newInstance()->_exportVariableToView('list_cities', Search::newInstance()->listCities('%%%%', '>=', 'city_name ASC') ) ;            echo '<select id="sRegion" name="sCity" class="'.$class.'">' ;            echo '<option value="">'.__('Select a city', 'bello').'</option>' ;            while( osc_has_list_cities() ) {                echo '<option value="' . osc_list_city_name() . '">' . osc_list_city_name() . '</option>' ;            }            echo '</select>' ;        View::newInstance()->_erase('list_cities') ;    }	function bello_city_select_items($class='') {            echo '<select id="sRegion" name="sCity" class="'.$class.'">' ;            echo '<option value="">'.__('Select a city', 'bello').'</option>' ;            while( osc_has_list_cities() ) {                echo '<option value="' . osc_list_city_name() . '">' . osc_list_city_name() . '</option>' ;            }            echo '</select>' ;    }	function bello_country_select($class='') {        View::newInstance()->_exportVariableToView('list_countries', Search::newInstance()->listCountries('>=', 'country_name ASC') ) ;            echo '<select id="sRegion" name="sCountry" class="'.$class.'">' ;            echo '<option value="">'.__('Select a country', 'bello').'</option>' ;            while( osc_has_list_countries() ) {                echo '<option value="' . osc_list_country_name() . '">' . osc_list_country_name() . '</option>' ;            }            echo '</select>' ;        View::newInstance()->_erase('list_countries') ;    }class bello_BodyClass {    private static $instance;    private $class;    private function __construct() {     $this->class = array();    }    public static function newInstance(){        if (  !self::$instance instanceof self)   {            self::$instance = new self;        }        return self::$instance;    }    public function add($class)   {        $this->class[] = $class;    }    public function get()   {        return $this->class;    }}class Bello_CategoryForm extends CategoryForm {static public function bello_category_select($categories, $category, $default_item = null, $name = "sCategory")        {            echo '<select name="' . $name . '" id="' . $name . '">';            if(isset($default_item)) {                echo '<option value="">' . $default_item . '</option>';            }            foreach($categories as $c) {                echo '<option value="' . $c['pk_i_id'] . '"' . ( ($category['pk_i_id'] == $c['pk_i_id']) ? 'selected="selected"' : '' ) . '>' . $c['s_name'] . '</option>';                if(isset($c['categories']) && is_array($c['categories'])) {                    CategoryForm::subcategory_select($c['categories'], $category, $default_item, 1);                }            }            echo '</select>';        }	}	function bello_categories_select($name = 'sCategory', $category = null, $default = null) {        if($default == null) $default = __('Category','bello');        Bello_CategoryForm::bello_category_select(Category::newInstance()->toTree(), $category, $default, $name);    }	function bello_search_region_select($class="", $default_item = null, $name = "sRegion",$region=null){			View::newInstance()->_exportVariableToView('list_regions', Search::newInstance()->listRegions('%%%%', '>=', 'region_name ASC') ) ;			if($default_item==null) $default_item = __('Select a region','bello');			if( osc_count_list_regions() > 0 ) {				echo '<select name="'.$name.'" id="'.$name.'" class="'.$class.' '.$name.'"  >' ;				if(isset($default_item) && $default_item!='') {					echo '<option value="">' . $default_item . '</option>';				}				while( osc_has_list_regions() ) {					echo '<option value="' . osc_list_region_id() . '" ' . ( ($region == osc_list_region_name()) ? 'selected="selected"' : '' ) . '>' . osc_list_region_name() . '</option>' ;				}				echo '</select>' ;			}			View::newInstance()->_erase('list_regions') ;		}    if( !OC_ADMIN ) {        if( !function_exists('add_close_button_action') ) {            function add_close_button_action(){                echo '<script type="text/javascript">';                    echo '$(".flashmessage .ico-close").click(function(){';                        echo '$(this).parent().hide();';                    echo '});';                echo '</script>';            }            osc_add_hook('footer', 'add_close_button_action');        }    }    function theme_bello_actions_admin() {        if( Params::getParam('file') == 'oc-content/themes/bello/admin/settings.php' ) {            if( Params::getParam('donation') == 'successful' ) {                osc_set_preference('donation', '1', 'bello');                osc_reset_preferences();            }        }        switch( Params::getParam('action_specific') ) {            case('settings'):                $footerLink  = Params::getParam('footer_link');                $defaultLogo = Params::getParam('default_logo');                osc_set_preference('keyword_placeholder', Params::getParam('keyword_placeholder'), 'bello');                osc_set_preference('footer_link', ($footerLink ? '1' : '0'), 'bello');                osc_set_preference('default_logo', ($defaultLogo ? '1' : '0'), 'bello');				osc_set_preference('defaultShowAs@all', Params::getParam('defaultShowAs@all'), 'bello');				osc_set_preference('main-search',      trim(Params::getParam('main-search', false, false, false)),              'bello');				osc_set_preference('main-carousel',      trim(Params::getParam('main-carousel', false, false, false)),              'bello');                osc_set_preference('main-regcity',      trim(Params::getParam('main-regcity', false, false, false)),              'bello');				osc_set_preference('item-icon',      trim(Params::getParam('item-icon', false, false, false)),              'bello');				osc_set_preference('defaultShowAs@search', Params::getParam('defaultShowAs@all'));				osc_set_preference('belloColor@all', Params::getParam('belloColor@all'), 'bello');                osc_set_preference('inc-main',         trim(Params::getParam('inc-main', false, false, false)),                  'bello');				osc_set_preference('sub',         trim(Params::getParam('sub', false, false, false)),                  'bello');				osc_set_preference('gocategory',         trim(Params::getParam('gocategory', false, false, false)),                  'bello');				osc_set_preference('subcategories',         trim(Params::getParam('subcategories', false, false, false)),                  'bello');				osc_set_preference('ssidebar',         trim(Params::getParam('ssidebar', false, false, false)),                  'bello');				if(is_numeric(Params::getParam('carousel_numads')))					osc_set_preference('carousel_numads', Params::getParam('carousel_numads'), 'bello');                osc_add_flash_ok_message(__('Theme settings updated correctly', 'bello'), 'admin');                header('Location: ' . osc_admin_render_theme_url('oc-content/themes/bello/admin/settings.php')); exit;            break;            case('upload_logo'):                $package = Params::getFiles('logo');                if( $package['error'] == UPLOAD_ERR_OK ) {                    if( move_uploaded_file($package['tmp_name'], WebThemes::newInstance()->getCurrentThemePath() . "img/logo.jpg" ) ) {                        osc_add_flash_ok_message(__('The logo image has been uploaded correctly', 'bello'), 'admin');                    } else {                        osc_add_flash_error_message(__("An error has occurred, please try again", 'bello'), 'admin');                    }                } else {                    osc_add_flash_error_message(__("An error has occurred, please try again", 'bello'), 'admin');                }                header('Location: ' . osc_admin_render_theme_url('oc-content/themes/bello/admin/header.php')); exit;            break;            case('remove'):                if(file_exists( WebThemes::newInstance()->getCurrentThemePath() . "img/logo.jpg" ) ) {                    @unlink( WebThemes::newInstance()->getCurrentThemePath() . "img/logo.jpg" );                    osc_add_flash_ok_message(__('The logo image has been removed', 'bello'), 'admin');                } else {                    osc_add_flash_error_message(__("Image not found", 'bello'), 'admin');                }                header('Location: ' . osc_admin_render_theme_url('oc-content/themes/bello/admin/header.php')); exit;            break;			case('ads_bello'):                osc_set_preference('main-bellorevo-top',         trim(Params::getParam('main-bellorevo-top', false, false, false)),                  'bello');                osc_set_preference('main-bellorevo-under',       trim(Params::getParam('main-bellorevo-under', false, false, false)),                'bello');                osc_set_preference('main-bellorevo-middle',       trim(Params::getParam('main-bellorevo-middle', false, false, false)),                'bello');                osc_set_preference('search-bellorevo-top',     trim(Params::getParam('search-bellorevo-top', false, false, false)),          'bello');                osc_set_preference('search-bellorevo_middle',  trim(Params::getParam('search-bellorevo_middle', false, false, false)),       'bello');				osc_set_preference('search-bellorevo_under',  trim(Params::getParam('search-bellorevo_under', false, false, false)),       'bello');				osc_set_preference('item-bellorevo_desc',  trim(Params::getParam('item-bellorevo_desc', false, false, false)),       'bello');				osc_set_preference('item-bellorevo_image',  trim(Params::getParam('item-bellorevo_image', false, false, false)),       'bello');				osc_set_preference('cat-bellorevo',         trim(Params::getParam('cat-bellorevo', false, false, false)),                  'bello');				osc_set_preference('side-bellorevo',         trim(Params::getParam('side-bellorevo', false, false, false)),                  'bello');				osc_set_preference('search-middle',  trim(Params::getParam('search-middle', false, false, false)),       'bello');				osc_set_preference('main-middle',  trim(Params::getParam('main-middle', false, false, false)),       'bello');                 osc_add_flash_ok_message(__("Settings updated correctly", 'bello'), 'admin');				osc_redirect_to(osc_admin_render_theme_url( 'oc-content/themes/bello/admin/settings.php#ads' ));			break;			 case('social_bello'):			     osc_set_preference('contact-locate',         trim(Params::getParam('contact-locate', false, false, false)),                  'bello');                osc_set_preference('contact-phone',         trim(Params::getParam('contact-phone', false, false, false)),                  'bello');                osc_set_preference('contact-email',         trim(Params::getParam('contact-email', false, false, false)),                  'bello');                 osc_set_preference('vk-bellorevo',         trim(Params::getParam('vk-bellorevo', false, false, false)),                  'bello');                 osc_set_preference('odnoklassniki-bellorevo',         trim(Params::getParam('odnoklassniki-bellorevo', false, false, false)),                  'bello');			 osc_set_preference('facebook-bellorevo',         trim(Params::getParam('facebook-bellorevo', false, false, false)),                  'bello');				osc_set_preference('twitter-bellorevo',         trim(Params::getParam('twitter-bellorevo', false, false, false)),                  'bello');				osc_set_preference('google-bellorevo',         trim(Params::getParam('google-bellorevo', false, false, false)),                  'bello');                 osc_set_preference('in-bellorevo',         trim(Params::getParam('in-bellorevo', false, false, false)),                  'bello');                 osc_set_preference('pinterest-bellorevo',         trim(Params::getParam('pinterest-bellorevo', false, false, false)),                  'bello');				 osc_set_preference('color-footer',Params::getParam('color-footer'),'bello');		       osc_add_flash_ok_message(__("Settings updated correctly", 'bello'), 'admin');				osc_redirect_to(osc_admin_render_theme_url( 'oc-content/themes/bello/admin/settings.php#social' ));			break;			case('items_bello'):			    osc_set_preference('item-post',         trim(Params::getParam('item-post', false, false, false)),                  'bello');				osc_set_preference('custom-fileds',         trim(Params::getParam('custom-fileds', false, false, false)),                  'bello');				osc_set_preference('mark-as',         trim(Params::getParam('mark-as', false, false, false)),                  'bello');				osc_set_preference('useful',         trim(Params::getParam('useful', false, false, false)),                  'bello');				osc_set_preference('map-bello',         trim(Params::getParam('map-bello', false, false, false)),                  'bello');				osc_set_preference('map-key',         trim(Params::getParam('map-key', false, false, false)),                  'bello');				osc_set_preference('map-key-geo',         trim(Params::getParam('map-key-geo', false, false, false)),                  'bello');		        osc_add_flash_ok_message(__("Settings updated correctly", 'bello'), 'admin');				osc_redirect_to(osc_admin_render_theme_url( 'oc-content/themes/bello/admin/settings.php#items' ));			break;			case('related_bello'):		        osc_set_preference('related_bello_ra_numads'    	, '4','bello','INTEGER');	            osc_set_preference('related_bello_ra_category'   , '1','bello','INTEGER');				osc_add_flash_ok_message(__("Ads management updated correctly", 'bello'), 'admin');				osc_redirect_to(osc_admin_render_theme_url( 'oc-content/themes/bello/admin/settings.php#related' ));			break;			case('welcome_bello'):				osc_set_preference('mainh1-bellorevo',         trim(Params::getParam('mainh1-bellorevo', false, false, false)),                  'bello');				osc_set_preference('maintext-bellorevo',         trim(Params::getParam('maintext-bellorevo', false, false, false)),                  'bello');		        osc_add_flash_ok_message(__("Settings updated correctly", 'bello'), 'admin');				osc_redirect_to(osc_admin_render_theme_url( 'oc-content/themes/bello/admin/settings.php#welcome' ));			break;			case('category_icons'):					$catID = Params::getParam('category_id');					$package = Params::getFiles('category_icon');                if( $package['error'] == UPLOAD_ERR_OK ) {                    $img = ImageResizer::fromFile($package['tmp_name']);                    $path = osc_base_path().'oc-content/themes/bello/img/'.$catID.'.png' ;                    $img->saveToFile($path);                    osc_add_flash_ok_message(__('The icon has been uploaded correctly', 'bello'), 'admin');                } else {                    osc_add_flash_error_message(__("An error has occurred, please try again", 'bello'), 'admin');                }                osc_redirect_to(osc_admin_render_theme_url('oc-content/themes/bello/admin/settings.php#icons'));            break;			case('remove-icon'):				$catID = Params::getParam('category_id');                $path = osc_base_path().'oc-content/themes/bello/img/'.$catID.'.png' ;                if(file_exists( $path ) ) {                    @unlink( $path );                    osc_add_flash_ok_message(__('The icon has been removed', 'bello'), 'admin');                } else {                    osc_add_flash_error_message(__("Image not found", 'bello'), 'admin');                }                osc_redirect_to(osc_admin_render_theme_url('oc-content/themes/bello/admin/settings.php#icons'));            break;				case('upload_main_image');					$mainimage = Params::getFiles('main_image');                if( $mainimage['error'] == UPLOAD_ERR_OK ) {                    $img = ImageResizer::fromFile($mainimage['tmp_name']);                    $path = osc_base_path().'oc-content/themes/bello/img/main/'.$mainimage['name'] ;                    $img->saveToFile($path);                    osc_add_flash_ok_message(__('The image has been uploaded correctly', 'bello'), 'admin');                } else {                    osc_add_flash_error_message(__("An error has occurred, please try again", 'bello'), 'admin');                }                osc_redirect_to(osc_admin_render_theme_url('oc-content/themes/bello/admin/settings.php#welcome'));			break;			case('remove_main_image');			$imgname = Params::getParam('main_name');				$path = osc_base_path().'oc-content/themes/bello/img/main/'.$imgname ;                if(file_exists( $path ) ) {                    @unlink( $path );                    osc_add_flash_ok_message(__('The image has been removed', 'bello'), 'admin');                } else {                    osc_add_flash_error_message(__("Image not found", 'bello'), 'admin');                }                osc_redirect_to(osc_admin_render_theme_url('oc-content/themes/bello/admin/settings.php#welcome'));			break;			case('main_image_color');			osc_set_preference('color-mainimage',Params::getParam('color-mainimage'),'bello');			osc_add_flash_ok_message(__('Background color updated', 'bello'), 'admin');                osc_redirect_to(osc_admin_render_theme_url('oc-content/themes/bello/admin/settings.php#welcome'));			break;					}    }	osc_add_hook('init_admin', 'theme_bello_actions_admin');	if( !function_exists('bello_show_as') ){        function bello_show_as(){            $p_sShowAs    = Params::getParam('sShowAs');            $aValidShowAsValues = array('list', 'gallery');            if (!in_array($p_sShowAs, $aValidShowAsValues)) {                $p_sShowAs = bello_default_show_as();            }            return $p_sShowAs;        }    }	if( !function_exists('bello_catshow_as') ){        function bello_catshow_as(){            $p_sShowAs    = Params::getParam('inc-main');            $aValidShowAsValues = array('inc.main.category', 'inc.main.subcategory');            if (!in_array($p_sShowAs, $aValidShowAsValues)) {                $p_sShowAs = bello_category_main();            }            return $p_sShowAs;        }    }	if( !function_exists('bello_regcity_as') ){        function bello_regcity_as(){            $p_sShowAs    = Params::getParam('main-search');            $aValidShowAsValues = array('inc.search', 'inc.search.city', 'inc.search.hide');            if (!in_array($p_sShowAs, $aValidShowAsValues)) {                $p_sShowAs = bello_regioncity_main();            }            return $p_sShowAs;        }    }    if( !function_exists('bello_default_show_as') ){        function bello_default_show_as(){            return getPreference('defaultShowAs@all','bello');        }    }	if( !function_exists('bello_color') ){        function bello_color(){            return getPreference('belloColor@all','bello');        }    }	if( !function_exists('bello_category_main') ){        function bello_category_main(){            return getPreference('inc-main','bello');        }    }	if( !function_exists('bello_item_icon') ){        function bello_item_icon(){            return getPreference('item-icon','bello');        }    }	if( !function_exists('bello_mark-as') ){        function bello_mark(){            return getPreference('mark-as','bello');        }    }	if( !function_exists('bello_sub') ){        function bello_sub(){            return getPreference('sub','bello');        }    }	if( !function_exists('bello_useful') ){        function bello_useful(){            return getPreference('useful','bello');        }    }	if( !function_exists('bello_regioncity_main') ){        function bello_regioncity_main(){            return getPreference('main-search','bello');        }    }	if( !function_exists('bello_main_carousel') ){        function bello_main_carousel(){            $p_sShowAs    = Params::getParam('main-carousel');            $aValidShowAsValues = array('premium', 'popular', 'hide');            if (!in_array($p_sShowAs, $aValidShowAsValues)) {                $p_sShowAs = bello_main_carousel_as();            }            return $p_sShowAs;        }    }	if( !function_exists('bello_main_carousel_as') ){        function bello_main_carousel_as(){            return getPreference('main-carousel','bello');        }    }	if( !function_exists('get_categoriesHierarchy') ) {        function get_categoriesHierarchy( ) {            $location = Rewrite::newInstance()->get_location() ;            $section  = Rewrite::newInstance()->get_section() ;            if ( $location != 'search' ) {                return false ;            }            $category_id = osc_search_category_id() ;            if(count($category_id) > 1) {                return false;            }            $category_id = (int) $category_id[0] ;            $categoriesHierarchy = Category::newInstance()->hierarchy($category_id) ;            foreach($categoriesHierarchy as &$category) {                $category['url'] = get_category_url($category) ;            }            return $categoriesHierarchy ;         }     }     if( !function_exists('get_subcategories') ) {         function get_subcategories( ) {             $location = Rewrite::newInstance()->get_location() ;             $section  = Rewrite::newInstance()->get_section() ;             if ( $location != 'search' ) {                 return false ;             }             $category_id = osc_search_category_id() ;             if(count($category_id) > 1) {                 return false ;             }             $category_id = (int) $category_id[0] ;             $subCategories = Category::newInstance()->findSubcategories($category_id) ;             foreach($subCategories as &$category) {                 $category['url'] = get_category_url($category) ;             }             return $subCategories ;         }     }     if ( !function_exists('get_category_url') ) {         function get_category_url( $category ) {             $path = '';             if ( osc_rewrite_enabled() ) {                if ($category != '') {                    $category = Category::newInstance()->hierarchy($category['pk_i_id']) ;                    $sanitized_category = "" ;                    for ($i = count($category); $i > 0; $i--) {                        $sanitized_category .= $category[$i - 1]['s_slug'] . '/' ;                    }                    $path = osc_base_url() . $sanitized_category ;                }            } else {                $path = sprintf( osc_base_url(true) . '?page=search&sCategory=%d', $category['pk_i_id'] ) ;            }            return $path;         }     }     if ( !function_exists('get_category_num_items') ) {         function get_category_num_items( $category ) {            $category_stats = CategoryStats::newInstance()->countItemsFromCategory($category['pk_i_id']) ;            if( empty($category_stats) ) {                return 0 ;            }            return $category_stats;         }     }	 if( !function_exists('bello_item_title') ) {        function bello_item_title() {            $title = osc_item_title();            foreach( osc_get_locales() as $locale ) {                if( Session::newInstance()->_getForm('title') != "" ) {                    $title_ = Session::newInstance()->_getForm('title');                    if( @$title_[$locale['pk_c_code']] != "" ){                        $title = $title_[$locale['pk_c_code']];                    }                }            }            return $title;        }    }    if( !function_exists('bello_item_description') ) {        function bello_item_description() {            $description = osc_item_description();            foreach( osc_get_locales() as $locale ) {                if( Session::newInstance()->_getForm('description') != "" ) {                    $description_ = Session::newInstance()->_getForm('description');                    if( @$description_[$locale['pk_c_code']] != "" ){                        $description = $description_[$locale['pk_c_code']];                    }                }            }            return $description;        }    }    if( !function_exists('logo_header') ) {        function logo_header() {            $html = '<img border="0" alt="' . osc_page_title() . '" src="' . osc_current_web_theme_url('img/logo.jpg') . '" />';            if( file_exists( WebThemes::newInstance()->getCurrentThemePath() . "img/logo.jpg" ) ) {                return $html;            } else if( osc_get_preference('default_logo', 'bello') && (file_exists( WebThemes::newInstance()->getCurrentThemePath() . "img/default-logo.jpg")) ) {                return '<img border="0" alt="' . osc_page_title() . '" src="' . osc_current_web_theme_url('img/default-logo.jpg') . '" />';            } else {                return osc_page_title();            }        }    }	if( !function_exists('bello_parentcategory_id') ){        function bello_parentcategory_id($categoryp){            $apCategory = osc_get_category('id',$categoryp);            $aparentCategory = osc_get_category('id', $apCategory['fk_i_parent_id']);           return $aparentCategory['pk_i_id'] ;        }    }if( !function_exists('bello_parentcategory_name') ){    function bello_parentcategory_name($categoryp){        $apCategory = osc_get_category('id', $categoryp);        $aparentCategory = osc_get_category('id', $apCategory['fk_i_parent_id']);        return $aparentCategory['s_name'] ;    }}// USER MENU FIXfunction bello_user_menu_fix() {  $user = User::newInstance()->findByPrimaryKey( osc_logged_user_id() );  View::newInstance()->_exportVariableToView('user', $user);}osc_add_hook('header', 'bello_user_menu_fix');    // install update options    if( !function_exists('bello_theme_install') ) {        function bello_theme_install() {            osc_set_preference('keyword_placeholder', __('ie. car', 'bello'), 'bello');            osc_set_preference('version', '1.2.6', 'bello');            osc_set_preference('footer_link', true, 'bello');            osc_set_preference('donation', '0', 'bello');            osc_set_preference('default_logo', '1', 'bello');			osc_set_preference('defaultShowAs@all', 'gallery', 'bello');			osc_set_preference('belloColor@all', 'neptune', 'bello');			osc_set_preference('related_bello_ra_numads', '4','bello');			osc_set_preference('carousel_numads', '8','bello');			osc_set_preference('inc-main', 'inc.main.subcategory', 'bello');			osc_set_preference('main-search', 'inc.search', 'bello');			osc_set_preference('main-carousel', 'premium', 'bello');			osc_set_preference('main-regcity', 'hide', 'bello');			osc_set_preference('item-post', 'default', 'bello');			osc_set_preference('item-icon', 'enable', 'bello');			osc_set_preference('map-bello', 'enable', 'bello');			osc_set_preference('mark-as', 'enable', 'bello');			osc_set_preference('sub', 'enable', 'bello');			osc_set_preference('useful', 'enable', 'bello');			osc_set_preference('ssidebar', 'select', 'bello');			osc_set_preference('custom-fileds', 'bottom', 'bello');			osc_set_preference('search-middle', '6','bello');			osc_set_preference('main-middle', '6','bello');            osc_set_preference('vk-bellorevo', 'https://vk.com','bello');            osc_set_preference('odnoklassniki-bellorevo', 'https://ok.ru','bello');			osc_set_preference('facebook-bellorevo', 'https://www.facebook.com/','bello');			osc_set_preference('twitter-bellorevo', 'https://twitter.com/','bello');			osc_set_preference('google-bellorevo', 'https://plus.google.com/','bello');            osc_set_preference('in-bellorevo', 'https://linkedin.com','bello');            osc_set_preference('pinterest-bellorevo', 'https://www.pinterest.com','bello');			osc_set_preference('mainh1-bellorevo', 'bello classifieds','bello');			osc_set_preference('maintext-bellorevo', 'Easy to buy, easy to sell','bello');			osc_set_preference('map-key', 'AIzaSyD-tzqTftm3ZEf0jOCDI9gpnXgpZRuZcTQ','bello');			osc_set_preference('gocategory', 'enable', 'bello');			osc_set_preference('subcategories', 'enable', 'bello');			osc_set_preference('color-mainimage', 'ffffff', 'bello');			osc_set_preference('color-footer', '2a2a2a', 'bello');            osc_reset_preferences();			if (!is_dir(osc_base_path().'oc-content/themes/bello/img/main')) {    			@mkdir(osc_base_path().'oc-content/themes/bello/img/main', 0755, true);			}        }    }    if(!function_exists('check_install_bello_theme')) {        function check_install_bello_theme() {            $current_version = osc_get_preference('version', 'bello');            //check if current version is installed or need an update            if( !$current_version ) {                bello_theme_install();            }        }    }    check_install_bello_theme();	/* ads  SEARCH */    function search_ads_listing_top_bellorevo() {        if(osc_get_preference('search-bellorevo-top', 'bello')!='') {            echo '<div class="search_top">' . PHP_EOL;            echo osc_get_preference('search-bellorevo-top', 'bello');            echo '</div>' . PHP_EOL;        }    }    osc_add_hook('search_top', 'search_ads_listing_top_bellorevo');	function search_ads_listing_under_bellorevo() {        if(osc_get_preference('search-bellorevo_under', 'bello')!='') {            echo '<div class="clear"></div>' . PHP_EOL;            echo '<div class="search_under">' . PHP_EOL;            echo osc_get_preference('search-bellorevo_under', 'bello');            echo '</div>' . PHP_EOL;        }    }    osc_add_hook('search_under', 'search_ads_listing_under_bellorevo');    function main_ads_listing_medium_bellorevo() {        if(osc_get_preference('main-bellorevo-middle', 'bello')!='') {            echo '<div class="clear"></div>' . PHP_EOL;            echo '<div class="middle_main">' . PHP_EOL;            echo osc_get_preference('main-bellorevo-middle', 'bello');            echo '</div>' . PHP_EOL;        }    }    osc_add_hook('main_middle', 'main_ads_listing_medium_bellorevo');	function search_ads_listing_medium_bellorevo() {        if(osc_get_preference('search-bellorevo_middle', 'bello')!='') {            echo '<div class="clear"></div>' . PHP_EOL;            echo '<div class="middle_search">' . PHP_EOL;            echo osc_get_preference('search-bellorevo_middle', 'bello');            echo '</div>' . PHP_EOL;        }    }    osc_add_hook('search_middle', 'search_ads_listing_medium_bellorevo');    /* remove theme */  function bello_delete() {Preference::newInstance()->delete(array('s_section' => 'bello'));    }osc_add_hook('theme_delete_bello', 'bello_delete');if( !function_exists('bello_carousel_num_ads') ) {		function bello_carousel_num_ads() {			return(osc_get_preference('carousel_numads', 'bello')) ;		}	}function bello_popular_ads_start() {			$num_ads = bello_carousel_num_ads(); // SETS HOW MANY POPULAR ADS TO DISPLAY			 $conn = getConnection();          $item_array=$conn->osc_dbFetchResults("SELECT i.*, l.*, t.*, total_views    FROM %st_item i    JOIN %st_item_location l ON i.pk_i_id = l.fk_i_item_id	JOIN %st_item_description t ON i.pk_i_id = t.fk_i_item_id    join (select fk_i_item_id as pk_i_id, sum(i_num_views) as total_views    from %st_item_stats    group by fk_i_item_id    having total_views > 0 ) as aux_item_views on aux_item_views.pk_i_id = i.pk_i_id    WHERE i.b_enabled = 1 AND i.b_active = 1 AND i.b_spam = 0 AND (i.b_premium = 1 || i.dt_expiration >= CURDATE())    ORDER BY total_views DESC    LIMIT 0, %d", DB_TABLE_PREFIX, DB_TABLE_PREFIX, DB_TABLE_PREFIX, DB_TABLE_PREFIX, $num_ads);    if(count($item_array) > 0) {	View::newInstance()->_exportVariableToView('customItems', $item_array);    }}    function osc_related_bello_ra_numads() {        return(osc_get_preference('related_bello_ra_numads', 'bello')) ;    }    function osc_related_bello_category() {        return(osc_get_preference('related_bello_ra_category', 'bello')) ;    }    function osc_related_bello_country() {        return(osc_get_preference('related_bello_ra_country', 'bello')) ;    }    function osc_related_bello_region() {        return(osc_get_preference('related_bello_ra_region', 'bello')) ;    }    function osc_related_bello_picOnly() {        return(osc_get_preference('related_bello_picOnly', 'bello')) ;    }    function osc_related_bello_css() {    	return(osc_get_preference('related_bello_css', 'bello')) ;    }    function osc_related_bello_autoembed() {    	return(osc_get_preference('related_bello_autoembed', 'bello')) ;    }    function osc_related_bello_premiumOnly() {    	return(osc_get_preference('related_bello_premiumonly', 'bello')) ;    }//function to show related Adsfunction related_bello_start() {    $rmItemId = osc_item_id() ;    $ra_numads = (osc_related_bello_ra_numads() != '') ? osc_related_bello_ra_numads() : '' ;    $country = (osc_related_bello_country() != '') ? osc_related_bello_country() : '' ;    $region = (osc_related_bello_region() != '') ? osc_related_bello_region() : '' ;    $category = (osc_related_bello_category() != '') ? osc_related_bello_category() : '' ;    $picOnly = (osc_related_bello_picOnly() != '') ? osc_related_bello_picOnly() : '';    $premiumonly = (osc_related_bello_premiumOnly() != '') ? osc_related_bello_premiumOnly() : '';    $mSearch = new Search() ;    //Excluding current item    $mSearch->dao->where(sprintf("%st_item.pk_i_id <> $rmItemId", DB_TABLE_PREFIX));    //Checking if item is premium    if($premiumonly ==1){    $mSearch->dao->where(sprintf("%st_item.b_premium = 1", DB_TABLE_PREFIX));    }    //Adding Country as condition    if($country ==1){    $mSearch->addCountry(osc_item_country()) ;    }    //Adding Region as condition    if($region ==1) {    $mSearch->addRegion(osc_item_region()) ;    }    //Adding Item Category as condition    if($category ==1) {    $mSearch->addCategory(osc_item_category_id()) ;    }    //Adding condition for item having pictures    if($picOnly == 1 ) {    $mSearch->withPicture(true); //Search only Item which have pictures    }    //limiting number of related ads    $mSearch->limit(0, $ra_numads) ; // fetch number of ads to show set in preference    //Searching with all enabled conditions    $aItems = $mSearch->doSearch();	$global_items = View::newInstance()->_get('items') ; //save existing item array	View::newInstance()->_exportVariableToView('items', $aItems); //exporting our searched item array    require_once WebThemes::newInstance()->getCurrentThemePath() . 'related_bello_ads.php';     //calling stored item array    View::newInstance()->_exportVariableToView('items', $global_items); //restore original item array    }	osc_add_hook('init_admin', 'theme_bello_actions_admin');function bello_is_fineuploader() {    return Scripts::newInstance()->registered['jquery-fineuploader'] && method_exists('ItemForm', 'ajax_photos');}if (function_exists('osc_admin_menu_appearance')) {    osc_admin_menu_appearance(__('Header logo', 'bello'), osc_admin_render_theme_url('oc-content/themes/bello/admin/header.php'), 'header_bello');    osc_admin_menu_appearance(__('Theme settings', 'bello'), osc_admin_render_theme_url('oc-content/themes/bello/admin/settings.php'), 'settings_bello');} else {    function bello_admin_menu() {        echo '<h3><a href="#">' . __('Bello theme', 'bello') . '</a></h3>            <ul>                <li><a href="' . osc_admin_render_theme_url('oc-content/themes/bello/admin/header.php') . '">&raquo; ' . __('Header logo', 'bello') . '</a></li>                <li><a href="' . osc_admin_render_theme_url('oc-content/themes/bello/admin/settings.php') . '">&raquo; ' . __('Theme settings', 'bello') . '</a></li>		   </ul>';    }    osc_add_hook('admin_menu', 'bello_admin_menu');}function bello_user_type() {  if(Params::getParam('sCompany') <> '' and Params::getParam('sCompany') <> null) {    Search::newInstance()->addJoinTable( 'pk_i_id', DB_TABLE_PREFIX.'t_user', DB_TABLE_PREFIX.'t_item.fk_i_user_id = '.DB_TABLE_PREFIX.'t_user.pk_i_id', 'LEFT OUTER' ) ;     if(Params::getParam('sCompany') == 1) {      Search::newInstance()->addConditions(sprintf("%st_user.b_company = 1", DB_TABLE_PREFIX));    } else {      Search::newInstance()->addConditions(sprintf("coalesce(%st_user.b_company, 0) <> 1", DB_TABLE_PREFIX, DB_TABLE_PREFIX));    }  }}osc_add_hook('search_conditions', 'bello_user_type');function bello_category_root( $category_id ) {  $category = Category::newInstance()->findRootCategory( $category_id );  $catid = $category['pk_i_id'];  return $catid;}function bello_category_root_name( $category_id ) {  $category = Category::newInstance()->findRootCategory( $category_id );  $catname = $category['s_name'];  return $catname;}function bello_search_location($country = null, $region = null, $city = null, $address = null) {    	$sAddress = (isset($address) ? $address : '');        $sCity = (isset($city) ? $city : '');        $sRegion = (isset($region) ? $region : '');        $sCountry = (isset($country) ? $country : '');        $fulladdress = sprintf('%s, %s, %s, %s', $sAddress, $sCity, $sRegion, $sCountry);		if (osc_get_preference('map-key-geo', 'bello') != ''){		$key =  osc_get_preference('map-key-geo', 'bello');		} else{		$key =  osc_get_preference('map-key', 'bello');		}        $response = file_get_contents(sprintf('https://maps.googleapis.com/maps/api/geocode/json?address=%s&key=%s', urlencode($fulladdress), $key));        $jsonResponse = json_decode($response);        $coord = false;    if (isset($jsonResponse->results[0]->geometry->location) && !empty($jsonResponse->results[0]->geometry->location)) 		{        $location = $jsonResponse->results[0]->geometry->location;        $coord['lat'] = $location->lat;        $coord['lng'] = $location->lng;    }	return  $coord ;}function bello_add_location($item) {        $itemId = $item['pk_i_id'];        $aItem = Item::newInstance()->findByPrimaryKey($itemId);        $sAddress = (isset($aItem['s_address']) ? $aItem['s_address'] : '');        $sCity = (isset($aItem['s_city']) ? $aItem['s_city'] : '');        $sRegion = (isset($aItem['s_region']) ? $aItem['s_region'] : '');        $sCountry = (isset($aItem['s_country']) ? $aItem['s_country'] : '');        $fulladdress = sprintf('%s, %s, %s, %s', $sAddress, $sCity, $sRegion, $sCountry);        if (osc_get_preference('map-key-geo', 'bello') != ''){		$key =  osc_get_preference('map-key-geo', 'bello');		} else{		$key =  osc_get_preference('map-key', 'bello');		}        $response = file_get_contents(sprintf('https://maps.googleapis.com/maps/api/geocode/json?address=%s&key=%s', urlencode($fulladdress), $key));        $jsonResponse = json_decode($response);        if (isset($jsonResponse->results[0]->geometry->location) && !empty($jsonResponse->results[0]->geometry->location)) 		{        $location = $jsonResponse->results[0]->geometry->location;        ItemLocation::newInstance()->update (array('d_coord_lat' => $location->lat                                                      ,'d_coord_long' => $location->lng)                                                ,array('fk_i_item_id' => $itemId));       }    }if(osc_get_preference('map-bello', 'bello') == 'enable' ) {osc_add_hook('posted_item', 'bello_add_location');osc_add_hook('edited_item', 'bello_add_location');}function bello_custom_false_404() {       if (!Search::newInstance()->count()) header('HTTP/1.1 200 Ok');}osc_add_hook("after_search", "bello_custom_false_404" );?>